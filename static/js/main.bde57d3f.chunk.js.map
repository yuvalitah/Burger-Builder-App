{"version":3,"sources":["store/actions/actionTypes.ts","shared/utility.ts","store/actions/burgerBuilder.ts","store/actions/order.ts","store/actions/auth.ts","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.ts","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.tsx","components/UI/Modal/Modal.tsx","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.tsx","components/UI/Spinner/Spinner.tsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.tsx","components/Burger/BurgerIngredient/BurgerIngredient.tsx","components/Burger/Burger.tsx","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","assets/images/burger-logo.png","components/Logo/Logo.tsx","components/Navigation/NavigationItems/NavigationItem/NavigationItem.tsx","components/Navigation/NavigationItems/NavigationItems.tsx","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.tsx","components/Navigation/Toolbar/Toolbar.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","hoc/Layout/Layout.tsx","components/Burger/BuildControls/BuildControl/BuildControl.tsx","components/Burger/BuildControls/BuildControls.tsx","components/Burger/OrderSummary/OrderSummary.tsx","containers/BurgerBuilder/BurgerBuilder.tsx","containers/Auth/Logout/Logout.tsx","hoc/asyncComponent/asyncComponent.tsx","App.tsx","store/reducers/BurgerBuilder.ts","store/reducers/Order.ts","store/reducers/Auth.ts","store/reducers/RootReducer.ts","store/reducers/PersistReducer.ts","index.tsx"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","idToken","checkAuthTimeout","expirationTime","setTimeout","authLogout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","localStorage","setItem","toString","localId","authFail","setAuthRedirectPath","path","authCheckState","authReducer","JSON","parse","getItem","module","exports","instance","create","baseURL","backdrop","props","show","className","classes","Backdrop","onClick","clicked","Modal","modalClosed","style","transform","opacity","children","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","reqInterceptor","resInterceptor","errorConfirmedHandler","setState","this","interceptors","request","use","eject","message","Component","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","map","Array","_","i","reduce","prev","curr","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","connect","useState","showSideDrawer","setShowSideDrawer","Content","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","ings","burgerBuilder","totalPrice","onIngredientAdded","ingName","actions","onIngredientRemoved","onInitIngredients","onInitPurchase","onSetAuthRedirectPath","purchasing","setPurchasing","useEffect","a","purchaseCancelHandler","disabledInfo","orderSummary","Spinner","sum","updatePurchaseState","history","onLogout","logout","asyncComponent","importComponent","component","setComponent","cmp","default","g","C","onTryAutoSignup","tryAutoSignup","asyncCheckout","asyncOrders","asyncAuth","routes","BurgerBuilder","Logout","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","orderReducer","authRedirectPath","authStart","rootReducer","combineReducers","burgerBuilderReducer","order","persistConfig","storage","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde57d3f.chunk.js","sourcesContent":["export const ADD_INGREDIENT: string = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT: string = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS: string = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED: string = \"FETCH_INGREDIENTS_FAILED\";\r\nexport const PURCHASE_BURGER_START: string = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS: string = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL: string = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT: string = \"PURCHASE_INIT\";\r\nexport const FETCH_ORDERS_START: string = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS: string = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL: string = \"FETCH_ORDERS_FAIL\";\r\nexport const AUTH_START: string = \"AUTH_START\";\r\nexport const AUTH_SUCCESS: string = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL: string = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT: string = \"AUTH_LOGOUT\";\r\nexport const SET_AUTH_REDIRECT_PATH: string = \"SET_AUTH_REDIRECT_PATH\";\r\n","import { CheckValidityRules } from \"../Types/CheckValidityRules/CheckValidityRules\";\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value: string, rules: CheckValidityRules): boolean => {\r\n  let isValid = true;\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  return isValid;\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\nimport { BurgerBuilderActionTypes } from \"../../Types/BurgerBuilderActionTypes/BurgerBuilderActionTypes\";\r\nimport { Ingredients } from \"../../Interfaces/IBurgerBuilder/IBurgerBuilderState/IBurgerBuilderState\";\r\nimport { ThunkActionType } from \"../../Types/ThunkActionType/thunkActionType\";\r\n\r\nexport const addIngredient = (name: string): BurgerBuilderActionTypes => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (name: string): BurgerBuilderActionTypes => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const setIngredients = (ingredients: Ingredients): BurgerBuilderActionTypes => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\n\r\nexport const fetchIngredientsFailed = (): BurgerBuilderActionTypes => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n  };\r\n};\r\n\r\nexport const initIngredients = (): ThunkActionType => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-application-93383.firebaseio.com/ingredients.json\")\r\n      .then((response) => dispatch(setIngredients(response.data)))\r\n      .catch((error) => dispatch(fetchIngredientsFailed()));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\nimport { OrderActionTypes } from \"../../Types/OrderActionTypes/OrderActionTypes\";\r\nimport { ThunkActionType } from \"../../Types/ThunkActionType/thunkActionType\";\r\nimport { IOrder } from \"../../Interfaces/IOrder/IOrderState/IOrderState\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nexport const purchaseBurgerSuccess = (id: string, orderData: IOrder): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error: AxiosError): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = (): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData: IOrder, token: string): ThunkActionType => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => dispatch(purchaseBurgerFail(error)));\r\n  };\r\n};\r\n\r\nexport const purchaseInit = (): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders: IOrder[]): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error: AxiosError): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = (): OrderActionTypes => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token: string, userId: string): ThunkActionType => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams: string = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    axios\r\n      .get(\"/orders.json\" + queryParams)\r\n      .then((response) => {\r\n        const fetchedOrders: IOrder[] = [];\r\n        for (let key in response.data) {\r\n          fetchedOrders.push({\r\n            ...response.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => fetchOrdersFail(error));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { AuthActionTypes } from \"../../Types/AuthActionTypes/AuthActionTypes\";\r\nimport { ThunkActionType } from \"../../Types/ThunkActionType/thunkActionType\";\r\n\r\nexport const authStart = (): AuthActionTypes => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token: string, userId: string): AuthActionTypes => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error: AxiosError): AuthActionTypes => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime: number): ThunkActionType => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogout = (): AuthActionTypes => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const auth = (email: string, password: string, isSignup: boolean): ThunkActionType => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData: object = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url: string =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDt8t0H6_pXngtd_wQ74zsNmU8G1JvYL5g\";\r\n\r\n    if (!isSignup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDt8t0H6_pXngtd_wQ74zsNmU8G1JvYL5g\";\r\n    }\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationDate: Date = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"expirationDate\", expirationDate.toString());\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path: string): AuthActionTypes => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = (): ThunkActionType => {\r\n  return (dispatch) => {\r\n    const authReducer = JSON.parse(\r\n      JSON.parse(localStorage.getItem(\"persist:rootReducer\"))\r\n        ? JSON.parse(localStorage.getItem(\"persist:rootReducer\")).auth\r\n        : null\r\n    );\r\n    const token: string = authReducer ? authReducer.token : null;\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate: Date = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate > new Date()) {\r\n        const userId: string = authReducer.userId;\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(authLogout());\r\n      }\r\n    }\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2vbxL\",\"BreadTop\":\"BurgerIngredient_BreadTop__3WZCr\",\"Seeds1\":\"BurgerIngredient_Seeds1__NO-kX\",\"Seeds2\":\"BurgerIngredient_Seeds2__1SiyR\",\"Meat\":\"BurgerIngredient_Meat__2toVZ\",\"Cheese\":\"BurgerIngredient_Cheese__ecY23\",\"Salad\":\"BurgerIngredient_Salad__icck1\",\"Bacon\":\"BurgerIngredient_Bacon__Iy4W1\"};","import axios, { AxiosInstance } from \"axios\";\r\n\r\nconst instance: AxiosInstance = axios.create({\r\n  baseURL: \"https://burger-application-93383.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2MYL-\",\"Open\":\"SideDrawer_Open__34KBf\",\"Close\":\"SideDrawer_Close__9QZSC\",\"Logo\":\"SideDrawer_Logo__11zMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3VVAe\",\"Label\":\"BuildControl_Label__3lpLe\",\"Less\":\"BuildControl_Less__1dc80\",\"More\":\"BuildControl_More__2swqa\"};","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst backdrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nbackdrop.propTypes = {\r\n  show: PropTypes.bool,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n      <>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  modalClosed: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3HLtl\",\"Logo\":\"Toolbar_Logo__3efVB\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2qmqL\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nbutton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  disabled: PropTypes.bool,\r\n  clicked: PropTypes.func,\r\n  btnType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2_jNg\",\"active\":\"NavigationItem_active__3IrPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2FUBA\",\"OrderButton\":\"BuildControls_OrderButton__KNXNl\",\"enable\":\"BuildControls_enable__2rBSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3SdNT\",\"Success\":\"Button_Success__1PGXh\",\"Danger\":\"Button_Danger__1eGWm\"};","import { AxiosError } from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n    reqInterceptor: number;\r\n    resInterceptor: number;\r\n\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use((request) => {\r\n        this.setState({ error: null });\r\n        return request;\r\n      });\r\n\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        (response) => response,\r\n        (error: AxiosError) => this.setState({ error: error })\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n  let ingredient: JSX.Element = null;\r\n  switch (props.type) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className={classes.BreadBottom}></div>;\r\n      break;\r\n\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className={classes.BreadTop}>\r\n          <div className={classes.Seeds1}></div>\r\n          <div className={classes.Seeds2}></div>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"meat\":\r\n      ingredient = <div className={classes.Meat}></div>;\r\n      break;\r\n\r\n    case \"cheese\":\r\n      ingredient = <div className={classes.Cheese}></div>;\r\n      break;\r\n\r\n    case \"salad\":\r\n      ingredient = <div className={classes.Salad}></div>;\r\n      break;\r\n\r\n    case \"bacon\":\r\n      ingredient = <div className={classes.Bacon}></div>;\r\n      break;\r\n\r\n    default:\r\n      ingredient = null;\r\n      break;\r\n  }\r\n  return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst burger = (props) => {\r\n  const transformedIngredients: JSX.Element[] = Object.keys(props.ingredients)\r\n    .map((key) =>\r\n      [...Array(props.ingredients[key])].map((_, i) => (\r\n        <BurgerIngredient key={key + i} type={key} />\r\n      ))\r\n    )\r\n    .reduce((prev, curr) => prev.concat(curr), []);\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients.length ? (\r\n        transformedIngredients\r\n      ) : (\r\n        <p>Please start adding Ingredients!</p>\r\n      )}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nburger.propTypes = {\r\n  ingredients: PropTypes.exact({\r\n    salad: PropTypes.number.isRequired,\r\n    bacon: PropTypes.number.isRequired,\r\n    cheese: PropTypes.number.isRequired,\r\n    meat: PropTypes.number.isRequired,\r\n  })\r\n};\r\n\r\nexport default burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3-AC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__wP2ht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3Uee5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__kw8Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3pc8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__dRCoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2cLky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__Ltu0j\",\"load2\":\"Spinner_load2__3VHns\"};","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"MyBurger\" />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst navigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink\r\n      to={props.link}\r\n      exact={props.exact}\r\n      activeClassName={classes.active}\r\n    >\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nnavigationItem.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n  exact: PropTypes.bool,\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/Burger-Builder-App\" exact>\r\n      Burger Builder\r\n    </NavigationItem>\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/Burger-Builder-App/orders\">Orders</NavigationItem>\r\n    ) : null}\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/Burger-Builder-App/logout\">Logout</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/Burger-Builder-App/auth\">Authenticate</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nnavigationItems.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst drawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\ndrawerToggle.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default drawerToggle;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems isAuthenticated={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\ntoolbar.propTypes ={\r\n  isAuth: PropTypes.bool.isRequired,\r\n  drawerToggleClicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst sideDrawer = (props) => {\r\n  let attachedClasses: string[] = [classes.SideDrawer, classes.Close];\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nsideDrawer.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  closed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../Types/RootState/RootState\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = (props) => {\r\n  const [showSideDrawer, setShowSideDrawer] = useState<boolean>(false);\r\n\r\n  const sideDrawerClosedHandler = (): void => {\r\n    setShowSideDrawer(false);\r\n  };\r\n\r\n  const sideDrawerToggleHandler = (): void => {\r\n    setShowSideDrawer(!showSideDrawer);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar\r\n        isAuth={props.isAuthenticated}\r\n        drawerToggleClicked={sideDrawerToggleHandler}\r\n      />\r\n      <SideDrawer\r\n        isAuth={props.isAuthenticated}\r\n        open={showSideDrawer}\r\n        closed={sideDrawerClosedHandler}\r\n      />\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nLayout.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst buildControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      className={classes.Less}\r\n      onClick={props.removed}\r\n      disabled={props.disabled}\r\n    >\r\n      Less\r\n    </button>\r\n    <button className={classes.More} onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nbuildControl.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  removed: PropTypes.func.isRequired,\r\n  added: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface IControls {\r\n  label: string,\r\n  type: string,\r\n};\r\n\r\nconst controls: IControls[] = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {controls.map((control) => (\r\n      <BuildControl\r\n        key={control.label}\r\n        label={control.label}\r\n        added={() => props.ingredientAdded(control.type)}\r\n        removed={() => props.ingredientRemoved(control.type)}\r\n        disabled={props.disabled[control.type]}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nbuildControls.propTypes = {\r\n  price: PropTypes.number.isRequired,\r\n  ingredientAdded: PropTypes.func.isRequired,\r\n  ingredientRemoved: PropTypes.func.isRequired,\r\n  disabled: PropTypes.exact({\r\n    bacon: PropTypes.bool,\r\n    cheese: PropTypes.bool,\r\n    salad: PropTypes.bool,\r\n    meat: PropTypes.bool,\r\n  }).isRequired,\r\n  purchasable: PropTypes.bool.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n  ordered: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default buildControls;\r\n","import React from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientSummary: JSX.Element[] = Object.keys(props.ingredients).map(\r\n    (ingredient) => {\r\n      return (\r\n        <li key={ingredient}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{ingredient}</span>:{\" \"}\r\n          {props.ingredients[ingredient]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to Checkout</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nOrderSummary.propTypes = {\r\n  ingredients: PropTypes.exact({\r\n    salad: PropTypes.number.isRequired,\r\n    bacon: PropTypes.number.isRequired,\r\n    cheese: PropTypes.number.isRequired,\r\n    meat: PropTypes.number.isRequired,\r\n  }),\r\n  price: PropTypes.number.isRequired,\r\n  purchaseCancelled: PropTypes.func.isRequired,\r\n  purchaseContinued: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios from \"../../axios-orders\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../Types/RootState/RootState\";\r\nimport { Ingredients } from \"../../Interfaces/IBurgerBuilder/IBurgerBuilderState/IBurgerBuilderState\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const BurgerBuilder = (props) => {\r\n  const [purchasing, setPurchasing] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const initIngredients: Function = async (): Promise<void> => {\r\n      await props.onInitIngredients();\r\n    };\r\n\r\n    initIngredients();\r\n  }, []);\r\n\r\n  const updatePurchaseState = (ingredients: Ingredients): boolean => {\r\n    let sum: number = 0;\r\n    for (let key in ingredients) {\r\n      sum += ingredients[key];\r\n    }\r\n    return sum > 0;\r\n  };\r\n\r\n  const purchaseHandler = (): void => {\r\n    if (props.isAuthenticated) {\r\n      setPurchasing(true);\r\n    } else {\r\n      props.onSetAuthRedirectPath(\"/Burger-Builder-App/checkout\");\r\n      props.history.push(\"/Burger-Builder-App/auth\");\r\n    }\r\n  };\r\n\r\n  const purchaseCancelHandler = (): void => {\r\n    setPurchasing(false);\r\n  };\r\n\r\n  const purchaseContinueHandler = (): void => {\r\n    props.onInitPurchase();\r\n    props.history.push(\"/Burger-Builder-App/checkout\");\r\n  };\r\n\r\n  const disabledInfo = {\r\n    ...props.ings,\r\n  };\r\n\r\n  for (const key in disabledInfo) {\r\n    disabledInfo[key] = disabledInfo[key] <= 0;\r\n  }\r\n\r\n  let orderSummary: JSX.Element = <Spinner />;\r\n\r\n  let burger: JSX.Element = props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n  if (props.ings) {\r\n    burger = (\r\n      <>\r\n        <Burger ingredients={props.ings} />\r\n        <BuildControls\r\n          ingredientAdded={props.onIngredientAdded}\r\n          ingredientRemoved={props.onIngredientRemoved}\r\n          disabled={disabledInfo}\r\n          price={props.price}\r\n          purchasable={updatePurchaseState(props.ings)}\r\n          isAuth={props.isAuthenticated}\r\n          ordered={purchaseHandler}\r\n        />\r\n      </>\r\n    );\r\n\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={props.ings}\r\n        price={props.price}\r\n        purchaseCancelled={purchaseCancelHandler}\r\n        purchaseContinued={purchaseContinueHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngredientAdded: (ingName: string) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName: string) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path: string) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nBurgerBuilder.propTypes = {\r\n  ings: PropTypes.exact({\r\n    salad: PropTypes.number.isRequired,\r\n    bacon: PropTypes.number.isRequired,\r\n    cheese: PropTypes.number.isRequired,\r\n    meat: PropTypes.number.isRequired,\r\n  }),\r\n  price: PropTypes.number.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  onIngredientAdded: PropTypes.func.isRequired,\r\n  onIngredientRemoved: PropTypes.func.isRequired,\r\n  onInitIngredients: PropTypes.func.isRequired,\r\n  onInitPurchase: PropTypes.func.isRequired,\r\n  onSetAuthRedirectPath: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Logout = (props) => {\r\n  useEffect(() => {\r\n    const logout: Function = async (): Promise<void> => {\r\n      await props.onLogout();\r\n    };\r\n\r\n    logout();\r\n  }, []);\r\n\r\n  return <Redirect to=\"/Burger-Builder-App\" />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout()),\r\n  };\r\n};\r\n\r\nLogout.propTypes = {\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst asyncComponent = (importComponent) => {\r\n  return (props) => {\r\n    const [component, setComponent] = useState(null);\r\n\r\n    useEffect(() => {\r\n      const g: Function = async (): Promise<void> => {\r\n        await importComponent().then((cmp) => setComponent(cmp.default));\r\n      };\r\n\r\n      g();\r\n    }, []);\r\n\r\n    const C = component;\r\n    return C ? <C {...props} /> : null;\r\n  };\r\n};\r\n\r\nexport default asyncComponent;\r\n","import React, { useEffect } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\nimport { RootState } from \"./Types/RootState/RootState\";\nimport * as actions from \"./store/actions/index\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst App = (props) => {\n  useEffect(() => {\n    const tryAutoSignup: Function = async (): Promise<void> => {\n      await props.onTryAutoSignup();\n    };\n\n    tryAutoSignup();\n  }, []);\n\n  const asyncCheckout = asyncComponent(() =>\n    import(\"./containers/Checkout/Checkout\")\n  );\n  const asyncOrders = asyncComponent(() =>\n    import(\"./containers/Orders/Orders\")\n  );\n  const asyncAuth = asyncComponent(() => import(\"./containers/Auth/Auth\"));\n\n  let routes: JSX.Element = (\n    <Switch>\n      <Route path=\"/Burger-Builder-App/auth\" component={asyncAuth} />\n      <Route path=\"/Burger-Builder-App\" exact component={BurgerBuilder} />\n      <Redirect to=\"/Burger-Builder-App\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/Burger-Builder-App/checkout\" component={asyncCheckout} />\n        <Route path=\"/Burger-Builder-App/orders\" component={asyncOrders} />\n        <Route path=\"/Burger-Builder-App/logout\" component={Logout} />\n        <Route path=\"/Burger-Builder-App/auth\" component={asyncAuth} />\n        <Route path=\"/Burger-Builder-App\" exact component={BurgerBuilder} />\n        <Redirect to=\"/Burger-Builder-App\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <Layout>{routes}</Layout>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n      isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nApp.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  onTryAutoSignup: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\nimport { IBurgerBuilderState, Ingredients } from \"../../Interfaces/IBurgerBuilder/IBurgerBuilderState/IBurgerBuilderState\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nconst initialState: IBurgerBuilderState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES: Ingredients = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = (state: IBurgerBuilderState, action: AnyAction): IBurgerBuilderState => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updatedState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building: true,\r\n  };\r\n  return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state: IBurgerBuilderState, action: AnyAction): IBurgerBuilderState => {\r\n  const updatedIng = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n  };\r\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n  const updatedSt = {\r\n    ingredients: updatedIngs,\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n    building: true,\r\n  };\r\n  return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state: IBurgerBuilderState, action: AnyAction): IBurgerBuilderState => {\r\n  return updateObject(state, {\r\n    ingredients: {\r\n      salad: action.ingredients.salad,\r\n      bacon: action.ingredients.bacon,\r\n      cheese: action.ingredients.cheese,\r\n      meat: action.ingredients.meat,\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false,\r\n  });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state: IBurgerBuilderState, action: AnyAction) => {\r\n  return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state: IBurgerBuilderState = initialState, action: AnyAction): IBurgerBuilderState => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredients(state, action);\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredientsFailed(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\nimport { IOrderState } from \"../../Interfaces/IOrder/IOrderState/IOrderState\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nconst initialState: IOrderState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst purchaseInit = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\n\r\nconst purchaseBurgerFail = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\n\r\nconst fetchOrdersFail = (state: IOrderState, action: AnyAction): IOrderState => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst orderReducer = (state: IOrderState = initialState, action: AnyAction): IOrderState => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state, action);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\nimport { AnyAction } from \"redux\";\r\nimport { IAuthState } from \"../../Interfaces/IAuth/IAuthState/IAuthState\";\r\n\r\nconst initialState: IAuthState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/Burger-Builder-App\",\r\n};\r\n\r\nconst authStart = (state: IAuthState, action: AnyAction): IAuthState => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state: IAuthState, action: AnyAction): IAuthState => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state: IAuthState, action: AnyAction): IAuthState => {\r\n  return updateObject(state, { error: action.error, loading: false });\r\n};\r\n\r\nconst authLogout = (state: IAuthState, action: AnyAction): IAuthState => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state: IAuthState, action: AnyAction): IAuthState => {\r\n  return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst authReducer = (state: IAuthState = initialState, action: AnyAction): IAuthState => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import burgerBuilderReducer from \"./BurgerBuilder\";\r\nimport orderReducer from \"./Order\";\r\nimport authReducer from \"./Auth\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n\r\n","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./RootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"rootReducer\",\r\n  storage,\r\n};\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, Store } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport persistReducer from \"./store/reducers/PersistReducer\";\r\nimport { Persistor, persistStore } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store: Store = createStore(\r\n  persistReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nconst persistor: Persistor = persistStore(store);\r\n\r\nconst app: JSX.Element = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>{app} </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}